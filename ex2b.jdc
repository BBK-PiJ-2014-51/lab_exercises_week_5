// Write a small program with a method that calculates the nth element of the Fibonacci sequence as seen in the notes.
// Is it easy to do this both iteratively and recursively? Try both ways and see which is more natural for you. If
// one takes too long, try the other way.
// When doing it recursively, do it with and without memoization. Compare the time that is needed in each case
// to find F(40) or F(45).


FibonacciCalc calc = new FibonacciCalc();
println(calc.iterativeFibonacci(4));
println(calc.recursiveFibonacci(4));

class FibonacciCalc{
	int iterativeFibonacci(int n){
		
 
		int lastNum = 0;
		int secondLastNum = 0;
		
		for (int i = 0; i < n; i++){
			int tempNum = lastNum;
			lastNum += secondLastNum;
			secondLastNum = tempNum;
			if (lastNum == 0) lastNum = 1;
			println("lastNum is now: " + String.valueOf(lastNum));
		}
		return lastNum;
	}
	
	int recursiveFibonacci(int n){
		if ( n==1 || n ==2 ) {
			return 1;
		} else {
			return recursiveFibonacci(n-1) + recursiveFibonacci(n-2);
		}
	}
}
